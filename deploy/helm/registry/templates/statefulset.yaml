apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: {{ include "registry.fullname" . }}
  namespace: {{ .Release.Namespace }}
  labels:
    {{- include "registry.labels" . | nindent 4 }}
spec:
  replicas: 1
  selector:
    matchLabels:
      {{- include "registry.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      {{- with .Values.podAnnotations }}
      annotations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      labels:
        {{- include "registry.labels" . | nindent 8 }}
        {{- with .Values.podLabels }}
        {{- toYaml . | nindent 8 }}
        {{- end }}
    spec:
      {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      serviceAccountName: {{ include "registry.serviceAccountName" . }}
      securityContext:
        {{- toYaml .Values.podSecurityContext | nindent 8 }}
      volumes:
      {{- if (and .Values.persistence.enabled (not (eq .Values.persistence.existingClaim ""))) }}
        - name: data
          persistentVolumeClaim:
            claimName: {{ include "registry.pvcName" . }}
      {{- else if not .Values.persistence.enabled }}
        - name: data
          emptyDir: {}
      {{- end }}
      containers:
        - name: registry
          securityContext:
            {{- toYaml .Values.securityContext | nindent 12 }}
          args:
            - serve
            - --port=5050
            - --store-type=dir
            - --dir=/etc/olareg/data
            - --verbosity={{ .Values.config.logLevel }}
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag | default .Chart.AppVersion }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          ports:
            - name: api
              containerPort: 5050
              protocol: TCP
          resources:
            {{- toYaml .Values.resources | nindent 12 }}
          volumeMounts:
          {{- if (and .Values.persistence.enabled (eq .Values.persistence.existingClaim "")) }}
            - name: {{ include "registry.pvcName" . }}
          {{- else }}
            - name: data
          {{- end }}
              mountPath: /etc/olareg/data
      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
  {{- if (and .Values.persistence.enabled (eq .Values.persistence.existingClaim "")) }}
  volumeClaimTemplates:
    - metadata:
        name: {{ include "registry.pvcName" . }}
        labels:
          {{- include "registry.labels" . | nindent 10 }}
        annotations:
          helm.sh/resource-policy: "keep"
        {{- if .Values.persistence.annotations }}
          {{- toYaml .Values.persistence.annotations | nindent 10 }}
        {{- end }}
      spec:
        accessModes:
          - {{ .Values.persistence.accessMode }}
        resources:
          requests:
            storage: {{ .Values.persistence.size }}
        {{- if .Values.persistence.storageClass }}
        storageClassName: {{ .Values.persistence.storageClass }}
        {{- end }}
  {{- end }}
